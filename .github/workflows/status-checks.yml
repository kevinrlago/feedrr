# .github/workflows/status-checks.yml
name: Status Checks

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['main', 'develop']

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Check formatting (black)
        run: black --check .
        
      - name: Check imports (isort)
        run: isort --check-only .
        
      - name: Lint (flake8)
        run: flake8 .
        
      - name: Type checking (mypy)
        run: mypy app/
        
      - name: Security check (bandit)
        run: bandit -r .
        
      - name: Dependencies security (safety)
        run: safety check

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: feedrr_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run tests with coverage
        run: pytest --cov=app --cov-report=xml
        
      - name: Coverage check
        run: |
          coverage report --fail-under=80

  frontend-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: cd frontend && npm install
        
      - name: ESLint
        run: cd frontend && npm run lint
        
      - name: TypeScript check
        run: cd frontend && npm run type-check
        
      - name: Frontend tests
        run: cd frontend && npm test

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Test backend build
        run: docker build -f backend/Dockerfile .
        
      - name: Test frontend build
        run: docker build -f frontend/Dockerfile .

  dependency-review:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Dependency Review
        uses: actions/dependency-review-action@v4